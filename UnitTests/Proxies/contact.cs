// 
// Code generated by a template.
//
using System;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;


namespace Shared.Proxies 
{
	
	[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
	[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1720:Identifier contains type name", Justification = "<Pending>")]
	[System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1056:URI-like properties should not be strings", Justification = "<Pending>")]
	[EntityLogicalName("contact")]
	public partial class Contact : CCLLC.CDS.Sdk.EarlyBound.EntityProxy
	{
		public const string EntityLogicalName = "contact";
		public const string PrimaryIdAttribute = "contactid";
		public const string PrimaryNameAttribute = "fullname";

		public Contact()
			: base("contact") {}

		#region Local OptionSet Enumerations

		#pragma warning disable IDE1006 // Naming Styles
		public enum eAccountRoleCode { DecisionMaker=1,  Employee=2,  Influencer=3, }
		public enum eAddress1AddressTypeCode { BillTo=1,  ShipTo=2,  Primary=3,  Other=4, }
		public enum eAddress1FreightTermsCode { FOB=1,  NoCharge=2, }
		public enum eAddress1ShippingMethodCode { Airborne=1,  DHL=2,  FedEx=3,  UPS=4,  PostalMail=5,  FullLoad=6,  WillCall=7, }
		public enum eAddress2AddressTypeCode { DefaultValue=1, }
		public enum eAddress2FreightTermsCode { DefaultValue=1, }
		public enum eAddress2ShippingMethodCode { DefaultValue=1, }
		public enum eAddress3AddressTypeCode { DefaultValue=1, }
		public enum eAddress3FreightTermsCode { DefaultValue=1, }
		public enum eAddress3ShippingMethodCode { DefaultValue=1, }
		public enum eCustomerSizeCode { DefaultValue=1, }
		public enum eCustomerTypeCode { DefaultValue=1, }
		public enum eEducationCode { DefaultValue=1, }
		public enum eFamilyStatusCode { Single=1,  Married=2,  Divorced=3,  Widowed=4, }
		public enum eGenderCode { Male=1,  Female=2, }
		public enum eHasChildrenCode { DefaultValue=1, }
		public enum eLeadSourceCode { DefaultValue=1, }
		public enum ePaymentTermsCode { Net30=1,  _210Net30=2,  Net45=3,  Net60=4, }
		public enum ePreferredAppointmentDayCode { Sunday=0,  Monday=1,  Tuesday=2,  Wednesday=3,  Thursday=4,  Friday=5,  Saturday=6, }
		public enum ePreferredAppointmentTimeCode { Morning=1,  Afternoon=2,  Evening=3, }
		public enum ePreferredContactMethodCode { Any=1,  Email=2,  Phone=3,  Fax=4,  Mail=5, }
		public enum eShippingMethodCode { DefaultValue=1, }
		public enum eStateCode { Active=0,  Inactive=1, }
		public enum eStatusCode { Active=1,  Inactive=2, }
		public enum eTerritoryCode { DefaultValue=1, }
		#pragma warning restore IDE1006 // Naming Styles

		#endregion Local OptionSet Enumerations

		#region Late Bound Field Constants

		[System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1034:Nested types should not be visible", Justification = "<Pending>")]
		public static class Fields
		{			
			public const string Id = "contactid";
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string AccountRoleCode = "accountrolecode";
			public const string AccountRoleCodeName = "accountrolecodename";
			public const string Address1AddressId = "address1_addressid";
			public const string Address1AddressTypeCode = "address1_addresstypecode";
			public const string Address1AddressTypeCodeName = "address1_addresstypecodename";
			public const string Address1City = "address1_city";
			public const string Address1Composite = "address1_composite";
			public const string Address1Country = "address1_country";
			public const string Address1County = "address1_county";
			public const string Address1Fax = "address1_fax";
			public const string Address1FreightTermsCode = "address1_freighttermscode";
			public const string Address1FreightTermsCodeName = "address1_freighttermscodename";
			public const string Address1Latitude = "address1_latitude";
			public const string Address1Line1 = "address1_line1";
			public const string Address1Line2 = "address1_line2";
			public const string Address1Line3 = "address1_line3";
			public const string Address1Longitude = "address1_longitude";
			public const string Address1Name = "address1_name";
			public const string Address1PostalCode = "address1_postalcode";
			public const string Address1PostOfficeBox = "address1_postofficebox";
			public const string Address1PrimaryContactName = "address1_primarycontactname";
			public const string Address1ShippingMethodCode = "address1_shippingmethodcode";
			public const string Address1ShippingMethodCodeName = "address1_shippingmethodcodename";
			public const string Address1StateOrProvince = "address1_stateorprovince";
			public const string Address1Telephone1 = "address1_telephone1";
			public const string Address1Telephone2 = "address1_telephone2";
			public const string Address1Telephone3 = "address1_telephone3";
			public const string Address1UPSZone = "address1_upszone";
			public const string Address1UTCOffset = "address1_utcoffset";
			public const string Address2AddressId = "address2_addressid";
			public const string Address2AddressTypeCode = "address2_addresstypecode";
			public const string Address2AddressTypeCodeName = "address2_addresstypecodename";
			public const string Address2City = "address2_city";
			public const string Address2Composite = "address2_composite";
			public const string Address2Country = "address2_country";
			public const string Address2County = "address2_county";
			public const string Address2Fax = "address2_fax";
			public const string Address2FreightTermsCode = "address2_freighttermscode";
			public const string Address2FreightTermsCodeName = "address2_freighttermscodename";
			public const string Address2Latitude = "address2_latitude";
			public const string Address2Line1 = "address2_line1";
			public const string Address2Line2 = "address2_line2";
			public const string Address2Line3 = "address2_line3";
			public const string Address2Longitude = "address2_longitude";
			public const string Address2Name = "address2_name";
			public const string Address2PostalCode = "address2_postalcode";
			public const string Address2PostOfficeBox = "address2_postofficebox";
			public const string Address2PrimaryContactName = "address2_primarycontactname";
			public const string Address2ShippingMethodCode = "address2_shippingmethodcode";
			public const string Address2ShippingMethodCodeName = "address2_shippingmethodcodename";
			public const string Address2StateOrProvince = "address2_stateorprovince";
			public const string Address2Telephone1 = "address2_telephone1";
			public const string Address2Telephone2 = "address2_telephone2";
			public const string Address2Telephone3 = "address2_telephone3";
			public const string Address2UPSZone = "address2_upszone";
			public const string Address2UTCOffset = "address2_utcoffset";
			public const string Address3AddressId = "address3_addressid";
			public const string Address3AddressTypeCode = "address3_addresstypecode";
			public const string Address3AddressTypeCodeName = "address3_addresstypecodename";
			public const string Address3City = "address3_city";
			public const string Address3Composite = "address3_composite";
			public const string Address3Country = "address3_country";
			public const string Address3County = "address3_county";
			public const string Address3Fax = "address3_fax";
			public const string Address3FreightTermsCode = "address3_freighttermscode";
			public const string Address3FreightTermsCodeName = "address3_freighttermscodename";
			public const string Address3Latitude = "address3_latitude";
			public const string Address3Line1 = "address3_line1";
			public const string Address3Line2 = "address3_line2";
			public const string Address3Line3 = "address3_line3";
			public const string Address3Longitude = "address3_longitude";
			public const string Address3Name = "address3_name";
			public const string Address3PostalCode = "address3_postalcode";
			public const string Address3PostOfficeBox = "address3_postofficebox";
			public const string Address3PrimaryContactName = "address3_primarycontactname";
			public const string Address3ShippingMethodCode = "address3_shippingmethodcode";
			public const string Address3ShippingMethodCodeName = "address3_shippingmethodcodename";
			public const string Address3StateOrProvince = "address3_stateorprovince";
			public const string Address3Telephone1 = "address3_telephone1";
			public const string Address3Telephone2 = "address3_telephone2";
			public const string Address3Telephone3 = "address3_telephone3";
			public const string Address3UPSZone = "address3_upszone";
			public const string Address3UTCOffset = "address3_utcoffset";
			public const string Aging30 = "aging30";
			public const string Aging30Base = "aging30_base";
			public const string Aging60 = "aging60";
			public const string Aging60Base = "aging60_base";
			public const string Aging90 = "aging90";
			public const string Aging90Base = "aging90_base";
			public const string Anniversary = "anniversary";
			public const string AnnualIncome = "annualincome";
			public const string AnnualIncomeBase = "annualincome_base";
			public const string AssistantName = "assistantname";
			public const string AssistantPhone = "assistantphone";
			public const string BirthDate = "birthdate";
			public const string Business2 = "business2";
			public const string Callback = "callback";
			public const string ChildrensNames = "childrensnames";
			public const string Company = "company";
			public const string ContactId = "contactid";
			public const string CreatedBy = "createdby";
			public const string CreatedByExternalParty = "createdbyexternalparty";
			public const string CreatedByExternalPartyName = "createdbyexternalpartyname";
			public const string CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CreditLimit = "creditlimit";
			public const string CreditLimitBase = "creditlimit_base";
			public const string CreditOnHold = "creditonhold";
			public const string CreditOnHoldName = "creditonholdname";
			public const string CustomerSizeCode = "customersizecode";
			public const string CustomerSizeCodeName = "customersizecodename";
			public const string CustomerTypeCode = "customertypecode";
			public const string CustomerTypeCodeName = "customertypecodename";
			public const string Department = "department";
			public const string Description = "description";
			public const string DoNotBulkEMail = "donotbulkemail";
			public const string DoNotBulkEMailName = "donotbulkemailname";
			public const string DoNotBulkPostalMail = "donotbulkpostalmail";
			public const string DoNotBulkPostalMailName = "donotbulkpostalmailname";
			public const string DoNotEMail = "donotemail";
			public const string DoNotEMailName = "donotemailname";
			public const string DoNotFax = "donotfax";
			public const string DoNotFaxName = "donotfaxname";
			public const string DoNotPhone = "donotphone";
			public const string DoNotPhoneName = "donotphonename";
			public const string DoNotPostalMail = "donotpostalmail";
			public const string DoNotPostalMailName = "donotpostalmailname";
			public const string DoNotSendMarketingMaterialName = "donotsendmarketingmaterialname";
			public const string DoNotSendMM = "donotsendmm";
			public const string EducationCode = "educationcode";
			public const string EducationCodeName = "educationcodename";
			public const string EMailAddress1 = "emailaddress1";
			public const string EMailAddress2 = "emailaddress2";
			public const string EMailAddress3 = "emailaddress3";
			public const string EmployeeId = "employeeid";
			public const string EntityImage = "entityimage";
			public const string EntityImageId = "entityimageid";
			public const string EntityImageTimestamp = "entityimage_timestamp";
			public const string EntityImageURL = "entityimage_url";
			public const string ExchangeRate = "exchangerate";
			public const string ExternalUserIdentifier = "externaluseridentifier";
			public const string FamilyStatusCode = "familystatuscode";
			public const string FamilyStatusCodeName = "familystatuscodename";
			public const string Fax = "fax";
			public const string FirstName = "firstname";
			public const string FollowEmail = "followemail";
			public const string FollowEmailName = "followemailname";
			public const string FtpSiteUrl = "ftpsiteurl";
			public const string FullName = "fullname";
			public const string GenderCode = "gendercode";
			public const string GenderCodeName = "gendercodename";
			public const string GovernmentId = "governmentid";
			public const string HasChildrenCode = "haschildrencode";
			public const string HasChildrenCodeName = "haschildrencodename";
			public const string Home2 = "home2";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IrisSocialSecurityNumber = "iris_socialsecuritynumber";
			public const string IsAutoCreate = "isautocreate";
			public const string IsBackofficeCustomer = "isbackofficecustomer";
			public const string IsBackofficeCustomerName = "isbackofficecustomername";
			public const string IsPrivate = "isprivate";
			public const string IsPrivateName = "isprivatename";
			public const string JobTitle = "jobtitle";
			public const string LastName = "lastname";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string LastUsedInCampaign = "lastusedincampaign";
			public const string LeadSourceCode = "leadsourcecode";
			public const string LeadSourceCodeName = "leadsourcecodename";
			public const string ManagerName = "managername";
			public const string ManagerPhone = "managerphone";
			public const string MarketingOnly = "marketingonly";
			public const string MarketingOnlyName = "marketingonlyname";
			public const string MasterContactIdName = "mastercontactidname";
			public const string MasterContactIdYomiName = "mastercontactidyominame";
			public const string MasterId = "masterid";
			public const string Merged = "merged";
			public const string MergedName = "mergedname";
			public const string MiddleName = "middlename";
			public const string MobilePhone = "mobilephone";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByExternalParty = "modifiedbyexternalparty";
			public const string ModifiedByExternalPartyName = "modifiedbyexternalpartyname";
			public const string ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string NickName = "nickname";
			public const string NumberOfChildren = "numberofchildren";
			public const string OnHoldTime = "onholdtime";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdType = "owneridtype";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string Pager = "pager";
			public const string ParentContactId = "parentcontactid";
			public const string ParentContactIdName = "parentcontactidname";
			public const string ParentContactIdYomiName = "parentcontactidyominame";
			public const string ParentCustomerId = "parentcustomerid";
			public const string ParentCustomerIdName = "parentcustomeridname";
			public const string ParentCustomerIdType = "parentcustomeridtype";
			public const string ParentCustomerIdYomiName = "parentcustomeridyominame";
			public const string ParticipatesInWorkflow = "participatesinworkflow";
			public const string ParticipatesInWorkflowName = "participatesinworkflowname";
			public const string PaymentTermsCode = "paymenttermscode";
			public const string PaymentTermsCodeName = "paymenttermscodename";
			public const string PreferredAppointmentDayCode = "preferredappointmentdaycode";
			public const string PreferredAppointmentDayCodeName = "preferredappointmentdaycodename";
			public const string PreferredAppointmentTimeCode = "preferredappointmenttimecode";
			public const string PreferredAppointmentTimeCodeName = "preferredappointmenttimecodename";
			public const string PreferredContactMethodCode = "preferredcontactmethodcode";
			public const string PreferredContactMethodCodeName = "preferredcontactmethodcodename";
			public const string PreferredSystemUserId = "preferredsystemuserid";
			public const string PreferredSystemUserIdName = "preferredsystemuseridname";
			public const string PreferredSystemUserIdYomiName = "preferredsystemuseridyominame";
			public const string ProcessId = "processid";
			public const string Salutation = "salutation";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodeName = "shippingmethodcodename";
			public const string SLAId = "slaid";
			public const string SLAInvokedId = "slainvokedid";
			public const string SLAInvokedIdName = "slainvokedidname";
			public const string SLAName = "slaname";
			public const string SpousesName = "spousesname";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string SubscriptionId = "subscriptionid";
			public const string Suffix = "suffix";
			public const string Telephone1 = "telephone1";
			public const string Telephone2 = "telephone2";
			public const string Telephone3 = "telephone3";
			public const string TerritoryCode = "territorycode";
			public const string TerritoryCodeName = "territorycodename";
			public const string TimeSpentByMeOnEmailAndMeetings = "timespentbymeonemailandmeetings";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string WebSiteUrl = "websiteurl";
			public const string YomiFirstName = "yomifirstname";
			public const string YomiFullName = "yomifullname";
			public const string YomiLastName = "yomilastname";
			public const string YomiMiddleName = "yomimiddlename";
		}

		#endregion Late Bound Field Constants

		[AttributeLogicalName("contactid")]
		public override Guid Id
		{
			get => base.Id; 
			set 
			{
				ContactId = value;
				base.Id = value;
			}
		}

		[AttributeLogicalName("accountid")]
		public virtual EntityReference AccountId
		{
			get => GetPropertyValue<EntityReference>("accountid"); 
		}

		[AttributeLogicalName("accountidname")]
		public virtual string AccountIdName
		{
			get => GetPropertyValue<string>("accountidname"); 
		}

		[AttributeLogicalName("accountidyominame")]
		public virtual string AccountIdYomiName
		{
			get => GetPropertyValue<string>("accountidyominame"); 
		}

		[AttributeLogicalName("accountrolecode")]
		public virtual eAccountRoleCode? AccountRoleCode
		{
			get => (eAccountRoleCode?)GetPropertyValue<OptionSetValue>("accountrolecode")?.Value;
			set => SetPropertyValue("accountrolecode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("accountrolecodename")]
		public virtual string AccountRoleCodeName
		{
			get => GetPropertyValue<string>("accountrolecodename"); 
		}

		[AttributeLogicalName("address1_addressid")]
		public virtual Guid Address1AddressId
		{
			get => GetPropertyValue<Guid>("address1_addressid"); 
			set => SetPropertyValue("address1_addressid", value); 
		}

		[AttributeLogicalName("address1_addresstypecode")]
		public virtual eAddress1AddressTypeCode? Address1AddressTypeCode
		{
			get => (eAddress1AddressTypeCode?)GetPropertyValue<OptionSetValue>("address1_addresstypecode")?.Value;
			set => SetPropertyValue("address1_addresstypecode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("address1_addresstypecodename")]
		public virtual string Address1AddressTypeCodeName
		{
			get => GetPropertyValue<string>("address1_addresstypecodename"); 
		}

		[AttributeLogicalName("address1_city")]
		public virtual string Address1City
		{
			get => GetPropertyValue<string>("address1_city"); 
			set => SetPropertyValue("address1_city", value); 
		}

		[AttributeLogicalName("address1_composite")]
		public virtual string Address1Composite
		{
			get => GetPropertyValue<string>("address1_composite"); 
		}

		[AttributeLogicalName("address1_country")]
		public virtual string Address1Country
		{
			get => GetPropertyValue<string>("address1_country"); 
			set => SetPropertyValue("address1_country", value); 
		}

		[AttributeLogicalName("address1_county")]
		public virtual string Address1County
		{
			get => GetPropertyValue<string>("address1_county"); 
			set => SetPropertyValue("address1_county", value); 
		}

		[AttributeLogicalName("address1_fax")]
		public virtual string Address1Fax
		{
			get => GetPropertyValue<string>("address1_fax"); 
			set => SetPropertyValue("address1_fax", value); 
		}

		[AttributeLogicalName("address1_freighttermscode")]
		public virtual eAddress1FreightTermsCode? Address1FreightTermsCode
		{
			get => (eAddress1FreightTermsCode?)GetPropertyValue<OptionSetValue>("address1_freighttermscode")?.Value;
			set => SetPropertyValue("address1_freighttermscode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("address1_freighttermscodename")]
		public virtual string Address1FreightTermsCodeName
		{
			get => GetPropertyValue<string>("address1_freighttermscodename"); 
		}

		[AttributeLogicalName("address1_latitude")]
		public virtual double? Address1Latitude
		{
			get => GetPropertyValue<double?>("address1_latitude"); 
			set => SetPropertyValue("address1_latitude", value); 
		}

		[AttributeLogicalName("address1_line1")]
		public virtual string Address1Line1
		{
			get => GetPropertyValue<string>("address1_line1"); 
			set => SetPropertyValue("address1_line1", value); 
		}

		[AttributeLogicalName("address1_line2")]
		public virtual string Address1Line2
		{
			get => GetPropertyValue<string>("address1_line2"); 
			set => SetPropertyValue("address1_line2", value); 
		}

		[AttributeLogicalName("address1_line3")]
		public virtual string Address1Line3
		{
			get => GetPropertyValue<string>("address1_line3"); 
			set => SetPropertyValue("address1_line3", value); 
		}

		[AttributeLogicalName("address1_longitude")]
		public virtual double? Address1Longitude
		{
			get => GetPropertyValue<double?>("address1_longitude"); 
			set => SetPropertyValue("address1_longitude", value); 
		}

		[AttributeLogicalName("address1_name")]
		public virtual string Address1Name
		{
			get => GetPropertyValue<string>("address1_name"); 
			set => SetPropertyValue("address1_name", value); 
		}

		[AttributeLogicalName("address1_postalcode")]
		public virtual string Address1PostalCode
		{
			get => GetPropertyValue<string>("address1_postalcode"); 
			set => SetPropertyValue("address1_postalcode", value); 
		}

		[AttributeLogicalName("address1_postofficebox")]
		public virtual string Address1PostOfficeBox
		{
			get => GetPropertyValue<string>("address1_postofficebox"); 
			set => SetPropertyValue("address1_postofficebox", value); 
		}

		[AttributeLogicalName("address1_primarycontactname")]
		public virtual string Address1PrimaryContactName
		{
			get => GetPropertyValue<string>("address1_primarycontactname"); 
			set => SetPropertyValue("address1_primarycontactname", value); 
		}

		[AttributeLogicalName("address1_shippingmethodcode")]
		public virtual eAddress1ShippingMethodCode? Address1ShippingMethodCode
		{
			get => (eAddress1ShippingMethodCode?)GetPropertyValue<OptionSetValue>("address1_shippingmethodcode")?.Value;
			set => SetPropertyValue("address1_shippingmethodcode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("address1_shippingmethodcodename")]
		public virtual string Address1ShippingMethodCodeName
		{
			get => GetPropertyValue<string>("address1_shippingmethodcodename"); 
		}

		[AttributeLogicalName("address1_stateorprovince")]
		public virtual string Address1StateOrProvince
		{
			get => GetPropertyValue<string>("address1_stateorprovince"); 
			set => SetPropertyValue("address1_stateorprovince", value); 
		}

		[AttributeLogicalName("address1_telephone1")]
		public virtual string Address1Telephone1
		{
			get => GetPropertyValue<string>("address1_telephone1"); 
			set => SetPropertyValue("address1_telephone1", value); 
		}

		[AttributeLogicalName("address1_telephone2")]
		public virtual string Address1Telephone2
		{
			get => GetPropertyValue<string>("address1_telephone2"); 
			set => SetPropertyValue("address1_telephone2", value); 
		}

		[AttributeLogicalName("address1_telephone3")]
		public virtual string Address1Telephone3
		{
			get => GetPropertyValue<string>("address1_telephone3"); 
			set => SetPropertyValue("address1_telephone3", value); 
		}

		[AttributeLogicalName("address1_upszone")]
		public virtual string Address1UPSZone
		{
			get => GetPropertyValue<string>("address1_upszone"); 
			set => SetPropertyValue("address1_upszone", value); 
		}

		[AttributeLogicalName("address1_utcoffset")]
		public virtual int? Address1UTCOffset
		{
			get => GetPropertyValue<int?>("address1_utcoffset"); 
			set => SetPropertyValue("address1_utcoffset", value); 
		}

		[AttributeLogicalName("address2_addressid")]
		public virtual Guid Address2AddressId
		{
			get => GetPropertyValue<Guid>("address2_addressid"); 
			set => SetPropertyValue("address2_addressid", value); 
		}

		[AttributeLogicalName("address2_addresstypecode")]
		public virtual eAddress2AddressTypeCode? Address2AddressTypeCode
		{
			get => (eAddress2AddressTypeCode?)GetPropertyValue<OptionSetValue>("address2_addresstypecode")?.Value;
			set => SetPropertyValue("address2_addresstypecode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("address2_addresstypecodename")]
		public virtual string Address2AddressTypeCodeName
		{
			get => GetPropertyValue<string>("address2_addresstypecodename"); 
		}

		[AttributeLogicalName("address2_city")]
		public virtual string Address2City
		{
			get => GetPropertyValue<string>("address2_city"); 
			set => SetPropertyValue("address2_city", value); 
		}

		[AttributeLogicalName("address2_composite")]
		public virtual string Address2Composite
		{
			get => GetPropertyValue<string>("address2_composite"); 
		}

		[AttributeLogicalName("address2_country")]
		public virtual string Address2Country
		{
			get => GetPropertyValue<string>("address2_country"); 
			set => SetPropertyValue("address2_country", value); 
		}

		[AttributeLogicalName("address2_county")]
		public virtual string Address2County
		{
			get => GetPropertyValue<string>("address2_county"); 
			set => SetPropertyValue("address2_county", value); 
		}

		[AttributeLogicalName("address2_fax")]
		public virtual string Address2Fax
		{
			get => GetPropertyValue<string>("address2_fax"); 
			set => SetPropertyValue("address2_fax", value); 
		}

		[AttributeLogicalName("address2_freighttermscode")]
		public virtual eAddress2FreightTermsCode? Address2FreightTermsCode
		{
			get => (eAddress2FreightTermsCode?)GetPropertyValue<OptionSetValue>("address2_freighttermscode")?.Value;
			set => SetPropertyValue("address2_freighttermscode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("address2_freighttermscodename")]
		public virtual string Address2FreightTermsCodeName
		{
			get => GetPropertyValue<string>("address2_freighttermscodename"); 
		}

		[AttributeLogicalName("address2_latitude")]
		public virtual double? Address2Latitude
		{
			get => GetPropertyValue<double?>("address2_latitude"); 
			set => SetPropertyValue("address2_latitude", value); 
		}

		[AttributeLogicalName("address2_line1")]
		public virtual string Address2Line1
		{
			get => GetPropertyValue<string>("address2_line1"); 
			set => SetPropertyValue("address2_line1", value); 
		}

		[AttributeLogicalName("address2_line2")]
		public virtual string Address2Line2
		{
			get => GetPropertyValue<string>("address2_line2"); 
			set => SetPropertyValue("address2_line2", value); 
		}

		[AttributeLogicalName("address2_line3")]
		public virtual string Address2Line3
		{
			get => GetPropertyValue<string>("address2_line3"); 
			set => SetPropertyValue("address2_line3", value); 
		}

		[AttributeLogicalName("address2_longitude")]
		public virtual double? Address2Longitude
		{
			get => GetPropertyValue<double?>("address2_longitude"); 
			set => SetPropertyValue("address2_longitude", value); 
		}

		[AttributeLogicalName("address2_name")]
		public virtual string Address2Name
		{
			get => GetPropertyValue<string>("address2_name"); 
			set => SetPropertyValue("address2_name", value); 
		}

		[AttributeLogicalName("address2_postalcode")]
		public virtual string Address2PostalCode
		{
			get => GetPropertyValue<string>("address2_postalcode"); 
			set => SetPropertyValue("address2_postalcode", value); 
		}

		[AttributeLogicalName("address2_postofficebox")]
		public virtual string Address2PostOfficeBox
		{
			get => GetPropertyValue<string>("address2_postofficebox"); 
			set => SetPropertyValue("address2_postofficebox", value); 
		}

		[AttributeLogicalName("address2_primarycontactname")]
		public virtual string Address2PrimaryContactName
		{
			get => GetPropertyValue<string>("address2_primarycontactname"); 
			set => SetPropertyValue("address2_primarycontactname", value); 
		}

		[AttributeLogicalName("address2_shippingmethodcode")]
		public virtual eAddress2ShippingMethodCode? Address2ShippingMethodCode
		{
			get => (eAddress2ShippingMethodCode?)GetPropertyValue<OptionSetValue>("address2_shippingmethodcode")?.Value;
			set => SetPropertyValue("address2_shippingmethodcode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("address2_shippingmethodcodename")]
		public virtual string Address2ShippingMethodCodeName
		{
			get => GetPropertyValue<string>("address2_shippingmethodcodename"); 
		}

		[AttributeLogicalName("address2_stateorprovince")]
		public virtual string Address2StateOrProvince
		{
			get => GetPropertyValue<string>("address2_stateorprovince"); 
			set => SetPropertyValue("address2_stateorprovince", value); 
		}

		[AttributeLogicalName("address2_telephone1")]
		public virtual string Address2Telephone1
		{
			get => GetPropertyValue<string>("address2_telephone1"); 
			set => SetPropertyValue("address2_telephone1", value); 
		}

		[AttributeLogicalName("address2_telephone2")]
		public virtual string Address2Telephone2
		{
			get => GetPropertyValue<string>("address2_telephone2"); 
			set => SetPropertyValue("address2_telephone2", value); 
		}

		[AttributeLogicalName("address2_telephone3")]
		public virtual string Address2Telephone3
		{
			get => GetPropertyValue<string>("address2_telephone3"); 
			set => SetPropertyValue("address2_telephone3", value); 
		}

		[AttributeLogicalName("address2_upszone")]
		public virtual string Address2UPSZone
		{
			get => GetPropertyValue<string>("address2_upszone"); 
			set => SetPropertyValue("address2_upszone", value); 
		}

		[AttributeLogicalName("address2_utcoffset")]
		public virtual int? Address2UTCOffset
		{
			get => GetPropertyValue<int?>("address2_utcoffset"); 
			set => SetPropertyValue("address2_utcoffset", value); 
		}

		[AttributeLogicalName("address3_addressid")]
		public virtual Guid Address3AddressId
		{
			get => GetPropertyValue<Guid>("address3_addressid"); 
			set => SetPropertyValue("address3_addressid", value); 
		}

		[AttributeLogicalName("address3_addresstypecode")]
		public virtual eAddress3AddressTypeCode? Address3AddressTypeCode
		{
			get => (eAddress3AddressTypeCode?)GetPropertyValue<OptionSetValue>("address3_addresstypecode")?.Value;
			set => SetPropertyValue("address3_addresstypecode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("address3_addresstypecodename")]
		public virtual string Address3AddressTypeCodeName
		{
			get => GetPropertyValue<string>("address3_addresstypecodename"); 
		}

		[AttributeLogicalName("address3_city")]
		public virtual string Address3City
		{
			get => GetPropertyValue<string>("address3_city"); 
			set => SetPropertyValue("address3_city", value); 
		}

		[AttributeLogicalName("address3_composite")]
		public virtual string Address3Composite
		{
			get => GetPropertyValue<string>("address3_composite"); 
		}

		[AttributeLogicalName("address3_country")]
		public virtual string Address3Country
		{
			get => GetPropertyValue<string>("address3_country"); 
			set => SetPropertyValue("address3_country", value); 
		}

		[AttributeLogicalName("address3_county")]
		public virtual string Address3County
		{
			get => GetPropertyValue<string>("address3_county"); 
			set => SetPropertyValue("address3_county", value); 
		}

		[AttributeLogicalName("address3_fax")]
		public virtual string Address3Fax
		{
			get => GetPropertyValue<string>("address3_fax"); 
			set => SetPropertyValue("address3_fax", value); 
		}

		[AttributeLogicalName("address3_freighttermscode")]
		public virtual eAddress3FreightTermsCode? Address3FreightTermsCode
		{
			get => (eAddress3FreightTermsCode?)GetPropertyValue<OptionSetValue>("address3_freighttermscode")?.Value;
			set => SetPropertyValue("address3_freighttermscode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("address3_freighttermscodename")]
		public virtual string Address3FreightTermsCodeName
		{
			get => GetPropertyValue<string>("address3_freighttermscodename"); 
		}

		[AttributeLogicalName("address3_latitude")]
		public virtual double? Address3Latitude
		{
			get => GetPropertyValue<double?>("address3_latitude"); 
			set => SetPropertyValue("address3_latitude", value); 
		}

		[AttributeLogicalName("address3_line1")]
		public virtual string Address3Line1
		{
			get => GetPropertyValue<string>("address3_line1"); 
			set => SetPropertyValue("address3_line1", value); 
		}

		[AttributeLogicalName("address3_line2")]
		public virtual string Address3Line2
		{
			get => GetPropertyValue<string>("address3_line2"); 
			set => SetPropertyValue("address3_line2", value); 
		}

		[AttributeLogicalName("address3_line3")]
		public virtual string Address3Line3
		{
			get => GetPropertyValue<string>("address3_line3"); 
			set => SetPropertyValue("address3_line3", value); 
		}

		[AttributeLogicalName("address3_longitude")]
		public virtual double? Address3Longitude
		{
			get => GetPropertyValue<double?>("address3_longitude"); 
			set => SetPropertyValue("address3_longitude", value); 
		}

		[AttributeLogicalName("address3_name")]
		public virtual string Address3Name
		{
			get => GetPropertyValue<string>("address3_name"); 
			set => SetPropertyValue("address3_name", value); 
		}

		[AttributeLogicalName("address3_postalcode")]
		public virtual string Address3PostalCode
		{
			get => GetPropertyValue<string>("address3_postalcode"); 
			set => SetPropertyValue("address3_postalcode", value); 
		}

		[AttributeLogicalName("address3_postofficebox")]
		public virtual string Address3PostOfficeBox
		{
			get => GetPropertyValue<string>("address3_postofficebox"); 
			set => SetPropertyValue("address3_postofficebox", value); 
		}

		[AttributeLogicalName("address3_primarycontactname")]
		public virtual string Address3PrimaryContactName
		{
			get => GetPropertyValue<string>("address3_primarycontactname"); 
			set => SetPropertyValue("address3_primarycontactname", value); 
		}

		[AttributeLogicalName("address3_shippingmethodcode")]
		public virtual eAddress3ShippingMethodCode? Address3ShippingMethodCode
		{
			get => (eAddress3ShippingMethodCode?)GetPropertyValue<OptionSetValue>("address3_shippingmethodcode")?.Value;
			set => SetPropertyValue("address3_shippingmethodcode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("address3_shippingmethodcodename")]
		public virtual string Address3ShippingMethodCodeName
		{
			get => GetPropertyValue<string>("address3_shippingmethodcodename"); 
		}

		[AttributeLogicalName("address3_stateorprovince")]
		public virtual string Address3StateOrProvince
		{
			get => GetPropertyValue<string>("address3_stateorprovince"); 
			set => SetPropertyValue("address3_stateorprovince", value); 
		}

		[AttributeLogicalName("address3_telephone1")]
		public virtual string Address3Telephone1
		{
			get => GetPropertyValue<string>("address3_telephone1"); 
			set => SetPropertyValue("address3_telephone1", value); 
		}

		[AttributeLogicalName("address3_telephone2")]
		public virtual string Address3Telephone2
		{
			get => GetPropertyValue<string>("address3_telephone2"); 
			set => SetPropertyValue("address3_telephone2", value); 
		}

		[AttributeLogicalName("address3_telephone3")]
		public virtual string Address3Telephone3
		{
			get => GetPropertyValue<string>("address3_telephone3"); 
			set => SetPropertyValue("address3_telephone3", value); 
		}

		[AttributeLogicalName("address3_upszone")]
		public virtual string Address3UPSZone
		{
			get => GetPropertyValue<string>("address3_upszone"); 
			set => SetPropertyValue("address3_upszone", value); 
		}

		[AttributeLogicalName("address3_utcoffset")]
		public virtual int? Address3UTCOffset
		{
			get => GetPropertyValue<int?>("address3_utcoffset"); 
			set => SetPropertyValue("address3_utcoffset", value); 
		}

		[AttributeLogicalName("aging30")]
		public virtual decimal? Aging30
		{
			get => GetPropertyValue<Money>("aging30")?.Value; 
		}

		[AttributeLogicalName("aging30_base")]
		public virtual decimal? Aging30Base
		{
			get => GetPropertyValue<Money>("aging30_base")?.Value; 
		}

		[AttributeLogicalName("aging60")]
		public virtual decimal? Aging60
		{
			get => GetPropertyValue<Money>("aging60")?.Value; 
		}

		[AttributeLogicalName("aging60_base")]
		public virtual decimal? Aging60Base
		{
			get => GetPropertyValue<Money>("aging60_base")?.Value; 
		}

		[AttributeLogicalName("aging90")]
		public virtual decimal? Aging90
		{
			get => GetPropertyValue<Money>("aging90")?.Value; 
		}

		[AttributeLogicalName("aging90_base")]
		public virtual decimal? Aging90Base
		{
			get => GetPropertyValue<Money>("aging90_base")?.Value; 
		}

		[AttributeLogicalName("anniversary")]
		public virtual DateTime? Anniversary
		{
			get => GetPropertyValue<DateTime?>("anniversary"); 
			set => SetPropertyValue("anniversary", value); 
		}

		[AttributeLogicalName("annualincome")]
		public virtual decimal? AnnualIncome
		{
			get => GetPropertyValue<Money>("annualincome")?.Value; 
			set => SetPropertyValue("annualincome", value is null ? null : new Money((decimal)value)); 
		}

		[AttributeLogicalName("annualincome_base")]
		public virtual decimal? AnnualIncomeBase
		{
			get => GetPropertyValue<Money>("annualincome_base")?.Value; 
		}

		[AttributeLogicalName("assistantname")]
		public virtual string AssistantName
		{
			get => GetPropertyValue<string>("assistantname"); 
			set => SetPropertyValue("assistantname", value); 
		}

		[AttributeLogicalName("assistantphone")]
		public virtual string AssistantPhone
		{
			get => GetPropertyValue<string>("assistantphone"); 
			set => SetPropertyValue("assistantphone", value); 
		}

		[AttributeLogicalName("birthdate")]
		public virtual DateTime? BirthDate
		{
			get => GetPropertyValue<DateTime?>("birthdate"); 
			set => SetPropertyValue("birthdate", value); 
		}

		[AttributeLogicalName("business2")]
		public virtual string Business2
		{
			get => GetPropertyValue<string>("business2"); 
			set => SetPropertyValue("business2", value); 
		}

		[AttributeLogicalName("callback")]
		public virtual string Callback
		{
			get => GetPropertyValue<string>("callback"); 
			set => SetPropertyValue("callback", value); 
		}

		[AttributeLogicalName("childrensnames")]
		public virtual string ChildrensNames
		{
			get => GetPropertyValue<string>("childrensnames"); 
			set => SetPropertyValue("childrensnames", value); 
		}

		[AttributeLogicalName("company")]
		public virtual string Company
		{
			get => GetPropertyValue<string>("company"); 
			set => SetPropertyValue("company", value); 
		}

		[AttributeLogicalName("contactid")]
		public virtual Guid ContactId
		{
			get => GetPropertyValue<Guid>("contactid"); 
			set => SetPropertyValue("contactid", value); 
		}

		[AttributeLogicalName("createdby")]
		public virtual EntityReference CreatedBy
		{
			get => GetPropertyValue<EntityReference>("createdby"); 
		}

		[AttributeLogicalName("createdbyexternalparty")]
		public virtual EntityReference CreatedByExternalParty
		{
			get => GetPropertyValue<EntityReference>("createdbyexternalparty"); 
		}

		[AttributeLogicalName("createdbyexternalpartyname")]
		public virtual string CreatedByExternalPartyName
		{
			get => GetPropertyValue<string>("createdbyexternalpartyname"); 
		}

		[AttributeLogicalName("createdbyexternalpartyyominame")]
		public virtual string CreatedByExternalPartyYomiName
		{
			get => GetPropertyValue<string>("createdbyexternalpartyyominame"); 
		}

		[AttributeLogicalName("createdbyname")]
		public virtual string CreatedByName
		{
			get => GetPropertyValue<string>("createdbyname"); 
		}

		[AttributeLogicalName("createdbyyominame")]
		public virtual string CreatedByYomiName
		{
			get => GetPropertyValue<string>("createdbyyominame"); 
		}

		[AttributeLogicalName("createdon")]
		public virtual DateTime? CreatedOn
		{
			get => GetPropertyValue<DateTime?>("createdon"); 
		}

		[AttributeLogicalName("createdonbehalfby")]
		public virtual EntityReference CreatedOnBehalfBy
		{
			get => GetPropertyValue<EntityReference>("createdonbehalfby"); 
		}

		[AttributeLogicalName("createdonbehalfbyname")]
		public virtual string CreatedOnBehalfByName
		{
			get => GetPropertyValue<string>("createdonbehalfbyname"); 
		}

		[AttributeLogicalName("createdonbehalfbyyominame")]
		public virtual string CreatedOnBehalfByYomiName
		{
			get => GetPropertyValue<string>("createdonbehalfbyyominame"); 
		}

		[AttributeLogicalName("creditlimit")]
		public virtual decimal? CreditLimit
		{
			get => GetPropertyValue<Money>("creditlimit")?.Value; 
			set => SetPropertyValue("creditlimit", value is null ? null : new Money((decimal)value)); 
		}

		[AttributeLogicalName("creditlimit_base")]
		public virtual decimal? CreditLimitBase
		{
			get => GetPropertyValue<Money>("creditlimit_base")?.Value; 
		}

		[AttributeLogicalName("creditonhold")]
		public virtual bool? CreditOnHold
		{
			get => GetPropertyValue<bool?>("creditonhold"); 
			set => SetPropertyValue("creditonhold", value); 
		}

		[AttributeLogicalName("creditonholdname")]
		public virtual string CreditOnHoldName
		{
			get => GetPropertyValue<string>("creditonholdname"); 
		}

		[AttributeLogicalName("customersizecode")]
		public virtual eCustomerSizeCode? CustomerSizeCode
		{
			get => (eCustomerSizeCode?)GetPropertyValue<OptionSetValue>("customersizecode")?.Value;
			set => SetPropertyValue("customersizecode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("customersizecodename")]
		public virtual string CustomerSizeCodeName
		{
			get => GetPropertyValue<string>("customersizecodename"); 
		}

		[AttributeLogicalName("customertypecode")]
		public virtual eCustomerTypeCode? CustomerTypeCode
		{
			get => (eCustomerTypeCode?)GetPropertyValue<OptionSetValue>("customertypecode")?.Value;
			set => SetPropertyValue("customertypecode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("customertypecodename")]
		public virtual string CustomerTypeCodeName
		{
			get => GetPropertyValue<string>("customertypecodename"); 
		}

		[AttributeLogicalName("department")]
		public virtual string Department
		{
			get => GetPropertyValue<string>("department"); 
			set => SetPropertyValue("department", value); 
		}

		[AttributeLogicalName("description")]
		public virtual string Description
		{
			get => GetPropertyValue<string>("description"); 
			set => SetPropertyValue("description", value); 
		}

		[AttributeLogicalName("donotbulkemail")]
		public virtual bool? DoNotBulkEMail
		{
			get => GetPropertyValue<bool?>("donotbulkemail"); 
			set => SetPropertyValue("donotbulkemail", value); 
		}

		[AttributeLogicalName("donotbulkemailname")]
		public virtual string DoNotBulkEMailName
		{
			get => GetPropertyValue<string>("donotbulkemailname"); 
		}

		[AttributeLogicalName("donotbulkpostalmail")]
		public virtual bool? DoNotBulkPostalMail
		{
			get => GetPropertyValue<bool?>("donotbulkpostalmail"); 
			set => SetPropertyValue("donotbulkpostalmail", value); 
		}

		[AttributeLogicalName("donotbulkpostalmailname")]
		public virtual string DoNotBulkPostalMailName
		{
			get => GetPropertyValue<string>("donotbulkpostalmailname"); 
		}

		[AttributeLogicalName("donotemail")]
		public virtual bool? DoNotEMail
		{
			get => GetPropertyValue<bool?>("donotemail"); 
			set => SetPropertyValue("donotemail", value); 
		}

		[AttributeLogicalName("donotemailname")]
		public virtual string DoNotEMailName
		{
			get => GetPropertyValue<string>("donotemailname"); 
		}

		[AttributeLogicalName("donotfax")]
		public virtual bool? DoNotFax
		{
			get => GetPropertyValue<bool?>("donotfax"); 
			set => SetPropertyValue("donotfax", value); 
		}

		[AttributeLogicalName("donotfaxname")]
		public virtual string DoNotFaxName
		{
			get => GetPropertyValue<string>("donotfaxname"); 
		}

		[AttributeLogicalName("donotphone")]
		public virtual bool? DoNotPhone
		{
			get => GetPropertyValue<bool?>("donotphone"); 
			set => SetPropertyValue("donotphone", value); 
		}

		[AttributeLogicalName("donotphonename")]
		public virtual string DoNotPhoneName
		{
			get => GetPropertyValue<string>("donotphonename"); 
		}

		[AttributeLogicalName("donotpostalmail")]
		public virtual bool? DoNotPostalMail
		{
			get => GetPropertyValue<bool?>("donotpostalmail"); 
			set => SetPropertyValue("donotpostalmail", value); 
		}

		[AttributeLogicalName("donotpostalmailname")]
		public virtual string DoNotPostalMailName
		{
			get => GetPropertyValue<string>("donotpostalmailname"); 
		}

		[AttributeLogicalName("donotsendmarketingmaterialname")]
		public virtual string DoNotSendMarketingMaterialName
		{
			get => GetPropertyValue<string>("donotsendmarketingmaterialname"); 
		}

		[AttributeLogicalName("donotsendmm")]
		public virtual bool? DoNotSendMM
		{
			get => GetPropertyValue<bool?>("donotsendmm"); 
			set => SetPropertyValue("donotsendmm", value); 
		}

		[AttributeLogicalName("educationcode")]
		public virtual eEducationCode? EducationCode
		{
			get => (eEducationCode?)GetPropertyValue<OptionSetValue>("educationcode")?.Value;
			set => SetPropertyValue("educationcode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("educationcodename")]
		public virtual string EducationCodeName
		{
			get => GetPropertyValue<string>("educationcodename"); 
		}

		[AttributeLogicalName("emailaddress1")]
		public virtual string EMailAddress1
		{
			get => GetPropertyValue<string>("emailaddress1"); 
			set => SetPropertyValue("emailaddress1", value); 
		}

		[AttributeLogicalName("emailaddress2")]
		public virtual string EMailAddress2
		{
			get => GetPropertyValue<string>("emailaddress2"); 
			set => SetPropertyValue("emailaddress2", value); 
		}

		[AttributeLogicalName("emailaddress3")]
		public virtual string EMailAddress3
		{
			get => GetPropertyValue<string>("emailaddress3"); 
			set => SetPropertyValue("emailaddress3", value); 
		}

		[AttributeLogicalName("employeeid")]
		public virtual string EmployeeId
		{
			get => GetPropertyValue<string>("employeeid"); 
			set => SetPropertyValue("employeeid", value); 
		}

		[AttributeLogicalName("entityimage")]
		public virtual string EntityImage
		{
			get => GetPropertyValue<string>("entityimage"); 
			set => SetPropertyValue("entityimage", value); 
		}

		[AttributeLogicalName("entityimageid")]
		public virtual Guid EntityImageId
		{
			get => GetPropertyValue<Guid>("entityimageid"); 
		}

		[AttributeLogicalName("entityimage_timestamp")]
		public virtual int? EntityImageTimestamp
		{
			get => GetPropertyValue<int?>("entityimage_timestamp"); 
		}

		[AttributeLogicalName("entityimage_url")]
		public virtual string EntityImageURL
		{
			get => GetPropertyValue<string>("entityimage_url"); 
		}

		[AttributeLogicalName("exchangerate")]
		public virtual decimal? ExchangeRate
		{
			get => GetPropertyValue<decimal?>("exchangerate"); 
		}

		[AttributeLogicalName("externaluseridentifier")]
		public virtual string ExternalUserIdentifier
		{
			get => GetPropertyValue<string>("externaluseridentifier"); 
			set => SetPropertyValue("externaluseridentifier", value); 
		}

		[AttributeLogicalName("familystatuscode")]
		public virtual eFamilyStatusCode? FamilyStatusCode
		{
			get => (eFamilyStatusCode?)GetPropertyValue<OptionSetValue>("familystatuscode")?.Value;
			set => SetPropertyValue("familystatuscode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("familystatuscodename")]
		public virtual string FamilyStatusCodeName
		{
			get => GetPropertyValue<string>("familystatuscodename"); 
		}

		[AttributeLogicalName("fax")]
		public virtual string Fax
		{
			get => GetPropertyValue<string>("fax"); 
			set => SetPropertyValue("fax", value); 
		}

		[AttributeLogicalName("firstname")]
		public virtual string FirstName
		{
			get => GetPropertyValue<string>("firstname"); 
			set => SetPropertyValue("firstname", value); 
		}

		[AttributeLogicalName("followemail")]
		public virtual bool? FollowEmail
		{
			get => GetPropertyValue<bool?>("followemail"); 
			set => SetPropertyValue("followemail", value); 
		}

		[AttributeLogicalName("followemailname")]
		public virtual string FollowEmailName
		{
			get => GetPropertyValue<string>("followemailname"); 
		}

		[AttributeLogicalName("ftpsiteurl")]
		public virtual string FtpSiteUrl
		{
			get => GetPropertyValue<string>("ftpsiteurl"); 
			set => SetPropertyValue("ftpsiteurl", value); 
		}

		[AttributeLogicalName("fullname")]
		public virtual string FullName
		{
			get => GetPropertyValue<string>("fullname"); 
		}

		[AttributeLogicalName("gendercode")]
		public virtual eGenderCode? GenderCode
		{
			get => (eGenderCode?)GetPropertyValue<OptionSetValue>("gendercode")?.Value;
			set => SetPropertyValue("gendercode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("gendercodename")]
		public virtual string GenderCodeName
		{
			get => GetPropertyValue<string>("gendercodename"); 
		}

		[AttributeLogicalName("governmentid")]
		public virtual string GovernmentId
		{
			get => GetPropertyValue<string>("governmentid"); 
			set => SetPropertyValue("governmentid", value); 
		}

		[AttributeLogicalName("haschildrencode")]
		public virtual eHasChildrenCode? HasChildrenCode
		{
			get => (eHasChildrenCode?)GetPropertyValue<OptionSetValue>("haschildrencode")?.Value;
			set => SetPropertyValue("haschildrencode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("haschildrencodename")]
		public virtual string HasChildrenCodeName
		{
			get => GetPropertyValue<string>("haschildrencodename"); 
		}

		[AttributeLogicalName("home2")]
		public virtual string Home2
		{
			get => GetPropertyValue<string>("home2"); 
			set => SetPropertyValue("home2", value); 
		}

		[AttributeLogicalName("importsequencenumber")]
		public virtual int? ImportSequenceNumber
		{
			get => GetPropertyValue<int?>("importsequencenumber"); 
			set => SetPropertyValue("importsequencenumber", value); 
		}

		[AttributeLogicalName("iris_socialsecuritynumber")]
		public virtual string IrisSocialSecurityNumber
		{
			get => GetPropertyValue<string>("iris_socialsecuritynumber"); 
			set => SetPropertyValue("iris_socialsecuritynumber", value); 
		}

		[AttributeLogicalName("isautocreate")]
		public virtual bool? IsAutoCreate
		{
			get => GetPropertyValue<bool?>("isautocreate"); 
		}

		[AttributeLogicalName("isbackofficecustomer")]
		public virtual bool? IsBackofficeCustomer
		{
			get => GetPropertyValue<bool?>("isbackofficecustomer"); 
			set => SetPropertyValue("isbackofficecustomer", value); 
		}

		[AttributeLogicalName("isbackofficecustomername")]
		public virtual string IsBackofficeCustomerName
		{
			get => GetPropertyValue<string>("isbackofficecustomername"); 
		}

		[AttributeLogicalName("isprivate")]
		public virtual bool? IsPrivate
		{
			get => GetPropertyValue<bool?>("isprivate"); 
		}

		[AttributeLogicalName("isprivatename")]
		public virtual string IsPrivateName
		{
			get => GetPropertyValue<string>("isprivatename"); 
		}

		[AttributeLogicalName("jobtitle")]
		public virtual string JobTitle
		{
			get => GetPropertyValue<string>("jobtitle"); 
			set => SetPropertyValue("jobtitle", value); 
		}

		[AttributeLogicalName("lastname")]
		public virtual string LastName
		{
			get => GetPropertyValue<string>("lastname"); 
			set => SetPropertyValue("lastname", value); 
		}

		[AttributeLogicalName("lastonholdtime")]
		public virtual DateTime? LastOnHoldTime
		{
			get => GetPropertyValue<DateTime?>("lastonholdtime"); 
			set => SetPropertyValue("lastonholdtime", value); 
		}

		[AttributeLogicalName("lastusedincampaign")]
		public virtual DateTime? LastUsedInCampaign
		{
			get => GetPropertyValue<DateTime?>("lastusedincampaign"); 
			set => SetPropertyValue("lastusedincampaign", value); 
		}

		[AttributeLogicalName("leadsourcecode")]
		public virtual eLeadSourceCode? LeadSourceCode
		{
			get => (eLeadSourceCode?)GetPropertyValue<OptionSetValue>("leadsourcecode")?.Value;
			set => SetPropertyValue("leadsourcecode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("leadsourcecodename")]
		public virtual string LeadSourceCodeName
		{
			get => GetPropertyValue<string>("leadsourcecodename"); 
		}

		[AttributeLogicalName("managername")]
		public virtual string ManagerName
		{
			get => GetPropertyValue<string>("managername"); 
			set => SetPropertyValue("managername", value); 
		}

		[AttributeLogicalName("managerphone")]
		public virtual string ManagerPhone
		{
			get => GetPropertyValue<string>("managerphone"); 
			set => SetPropertyValue("managerphone", value); 
		}

		[AttributeLogicalName("marketingonly")]
		public virtual bool? MarketingOnly
		{
			get => GetPropertyValue<bool?>("marketingonly"); 
			set => SetPropertyValue("marketingonly", value); 
		}

		[AttributeLogicalName("marketingonlyname")]
		public virtual string MarketingOnlyName
		{
			get => GetPropertyValue<string>("marketingonlyname"); 
		}

		[AttributeLogicalName("mastercontactidname")]
		public virtual string MasterContactIdName
		{
			get => GetPropertyValue<string>("mastercontactidname"); 
		}

		[AttributeLogicalName("mastercontactidyominame")]
		public virtual string MasterContactIdYomiName
		{
			get => GetPropertyValue<string>("mastercontactidyominame"); 
		}

		[AttributeLogicalName("masterid")]
		public virtual EntityReference MasterId
		{
			get => GetPropertyValue<EntityReference>("masterid"); 
		}

		[AttributeLogicalName("merged")]
		public virtual bool? Merged
		{
			get => GetPropertyValue<bool?>("merged"); 
		}

		[AttributeLogicalName("mergedname")]
		public virtual string MergedName
		{
			get => GetPropertyValue<string>("mergedname"); 
		}

		[AttributeLogicalName("middlename")]
		public virtual string MiddleName
		{
			get => GetPropertyValue<string>("middlename"); 
			set => SetPropertyValue("middlename", value); 
		}

		[AttributeLogicalName("mobilephone")]
		public virtual string MobilePhone
		{
			get => GetPropertyValue<string>("mobilephone"); 
			set => SetPropertyValue("mobilephone", value); 
		}

		[AttributeLogicalName("modifiedby")]
		public virtual EntityReference ModifiedBy
		{
			get => GetPropertyValue<EntityReference>("modifiedby"); 
		}

		[AttributeLogicalName("modifiedbyexternalparty")]
		public virtual EntityReference ModifiedByExternalParty
		{
			get => GetPropertyValue<EntityReference>("modifiedbyexternalparty"); 
		}

		[AttributeLogicalName("modifiedbyexternalpartyname")]
		public virtual string ModifiedByExternalPartyName
		{
			get => GetPropertyValue<string>("modifiedbyexternalpartyname"); 
		}

		[AttributeLogicalName("modifiedbyexternalpartyyominame")]
		public virtual string ModifiedByExternalPartyYomiName
		{
			get => GetPropertyValue<string>("modifiedbyexternalpartyyominame"); 
		}

		[AttributeLogicalName("modifiedbyname")]
		public virtual string ModifiedByName
		{
			get => GetPropertyValue<string>("modifiedbyname"); 
		}

		[AttributeLogicalName("modifiedbyyominame")]
		public virtual string ModifiedByYomiName
		{
			get => GetPropertyValue<string>("modifiedbyyominame"); 
		}

		[AttributeLogicalName("modifiedon")]
		public virtual DateTime? ModifiedOn
		{
			get => GetPropertyValue<DateTime?>("modifiedon"); 
		}

		[AttributeLogicalName("modifiedonbehalfby")]
		public virtual EntityReference ModifiedOnBehalfBy
		{
			get => GetPropertyValue<EntityReference>("modifiedonbehalfby"); 
		}

		[AttributeLogicalName("modifiedonbehalfbyname")]
		public virtual string ModifiedOnBehalfByName
		{
			get => GetPropertyValue<string>("modifiedonbehalfbyname"); 
		}

		[AttributeLogicalName("modifiedonbehalfbyyominame")]
		public virtual string ModifiedOnBehalfByYomiName
		{
			get => GetPropertyValue<string>("modifiedonbehalfbyyominame"); 
		}

		[AttributeLogicalName("nickname")]
		public virtual string NickName
		{
			get => GetPropertyValue<string>("nickname"); 
			set => SetPropertyValue("nickname", value); 
		}

		[AttributeLogicalName("numberofchildren")]
		public virtual int? NumberOfChildren
		{
			get => GetPropertyValue<int?>("numberofchildren"); 
			set => SetPropertyValue("numberofchildren", value); 
		}

		[AttributeLogicalName("onholdtime")]
		public virtual int? OnHoldTime
		{
			get => GetPropertyValue<int?>("onholdtime"); 
		}

		[AttributeLogicalName("overriddencreatedon")]
		public virtual DateTime? OverriddenCreatedOn
		{
			get => GetPropertyValue<DateTime?>("overriddencreatedon"); 
			set => SetPropertyValue("overriddencreatedon", value); 
		}

		[AttributeLogicalName("ownerid")]
		public virtual EntityReference OwnerId
		{
			get => GetPropertyValue<EntityReference>("ownerid"); 
			set => SetPropertyValue("ownerid", value); 
		}

		[AttributeLogicalName("owneridname")]
		public virtual string OwnerIdName
		{
			get => GetPropertyValue<string>("owneridname"); 
		}

		[AttributeLogicalName("owneridtype")]
		public virtual string OwnerIdType
		{
			get => GetPropertyValue<string>("owneridtype"); 
			set => SetPropertyValue("owneridtype", value); 
		}

		[AttributeLogicalName("owneridyominame")]
		public virtual string OwnerIdYomiName
		{
			get => GetPropertyValue<string>("owneridyominame"); 
		}

		[AttributeLogicalName("owningbusinessunit")]
		public virtual EntityReference OwningBusinessUnit
		{
			get => GetPropertyValue<EntityReference>("owningbusinessunit"); 
		}

		[AttributeLogicalName("owningbusinessunitname")]
		public virtual string OwningBusinessUnitName
		{
			get => GetPropertyValue<string>("owningbusinessunitname"); 
		}

		[AttributeLogicalName("owningteam")]
		public virtual EntityReference OwningTeam
		{
			get => GetPropertyValue<EntityReference>("owningteam"); 
		}

		[AttributeLogicalName("owninguser")]
		public virtual EntityReference OwningUser
		{
			get => GetPropertyValue<EntityReference>("owninguser"); 
		}

		[AttributeLogicalName("pager")]
		public virtual string Pager
		{
			get => GetPropertyValue<string>("pager"); 
			set => SetPropertyValue("pager", value); 
		}

		[AttributeLogicalName("parentcontactid")]
		public virtual EntityReference ParentContactId
		{
			get => GetPropertyValue<EntityReference>("parentcontactid"); 
		}

		[AttributeLogicalName("parentcontactidname")]
		public virtual string ParentContactIdName
		{
			get => GetPropertyValue<string>("parentcontactidname"); 
		}

		[AttributeLogicalName("parentcontactidyominame")]
		public virtual string ParentContactIdYomiName
		{
			get => GetPropertyValue<string>("parentcontactidyominame"); 
		}

		[AttributeLogicalName("parentcustomerid")]
		public virtual EntityReference ParentCustomerId
		{
			get => GetPropertyValue<EntityReference>("parentcustomerid"); 
			set => SetPropertyValue("parentcustomerid", value); 
		}

		[AttributeLogicalName("parentcustomeridname")]
		public virtual string ParentCustomerIdName
		{
			get => GetPropertyValue<string>("parentcustomeridname"); 
		}

		[AttributeLogicalName("parentcustomeridtype")]
		public virtual string ParentCustomerIdType
		{
			get => GetPropertyValue<string>("parentcustomeridtype"); 
			set => SetPropertyValue("parentcustomeridtype", value); 
		}

		[AttributeLogicalName("parentcustomeridyominame")]
		public virtual string ParentCustomerIdYomiName
		{
			get => GetPropertyValue<string>("parentcustomeridyominame"); 
		}

		[AttributeLogicalName("participatesinworkflow")]
		public virtual bool? ParticipatesInWorkflow
		{
			get => GetPropertyValue<bool?>("participatesinworkflow"); 
			set => SetPropertyValue("participatesinworkflow", value); 
		}

		[AttributeLogicalName("participatesinworkflowname")]
		public virtual string ParticipatesInWorkflowName
		{
			get => GetPropertyValue<string>("participatesinworkflowname"); 
		}

		[AttributeLogicalName("paymenttermscode")]
		public virtual ePaymentTermsCode? PaymentTermsCode
		{
			get => (ePaymentTermsCode?)GetPropertyValue<OptionSetValue>("paymenttermscode")?.Value;
			set => SetPropertyValue("paymenttermscode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("paymenttermscodename")]
		public virtual string PaymentTermsCodeName
		{
			get => GetPropertyValue<string>("paymenttermscodename"); 
		}

		[AttributeLogicalName("preferredappointmentdaycode")]
		public virtual ePreferredAppointmentDayCode? PreferredAppointmentDayCode
		{
			get => (ePreferredAppointmentDayCode?)GetPropertyValue<OptionSetValue>("preferredappointmentdaycode")?.Value;
			set => SetPropertyValue("preferredappointmentdaycode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("preferredappointmentdaycodename")]
		public virtual string PreferredAppointmentDayCodeName
		{
			get => GetPropertyValue<string>("preferredappointmentdaycodename"); 
		}

		[AttributeLogicalName("preferredappointmenttimecode")]
		public virtual ePreferredAppointmentTimeCode? PreferredAppointmentTimeCode
		{
			get => (ePreferredAppointmentTimeCode?)GetPropertyValue<OptionSetValue>("preferredappointmenttimecode")?.Value;
			set => SetPropertyValue("preferredappointmenttimecode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("preferredappointmenttimecodename")]
		public virtual string PreferredAppointmentTimeCodeName
		{
			get => GetPropertyValue<string>("preferredappointmenttimecodename"); 
		}

		[AttributeLogicalName("preferredcontactmethodcode")]
		public virtual ePreferredContactMethodCode? PreferredContactMethodCode
		{
			get => (ePreferredContactMethodCode?)GetPropertyValue<OptionSetValue>("preferredcontactmethodcode")?.Value;
			set => SetPropertyValue("preferredcontactmethodcode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("preferredcontactmethodcodename")]
		public virtual string PreferredContactMethodCodeName
		{
			get => GetPropertyValue<string>("preferredcontactmethodcodename"); 
		}

		[AttributeLogicalName("preferredsystemuserid")]
		public virtual EntityReference PreferredSystemUserId
		{
			get => GetPropertyValue<EntityReference>("preferredsystemuserid"); 
			set => SetPropertyValue("preferredsystemuserid", value); 
		}

		[AttributeLogicalName("preferredsystemuseridname")]
		public virtual string PreferredSystemUserIdName
		{
			get => GetPropertyValue<string>("preferredsystemuseridname"); 
		}

		[AttributeLogicalName("preferredsystemuseridyominame")]
		public virtual string PreferredSystemUserIdYomiName
		{
			get => GetPropertyValue<string>("preferredsystemuseridyominame"); 
		}

		[AttributeLogicalName("processid")]
		public virtual Guid ProcessId
		{
			get => GetPropertyValue<Guid>("processid"); 
			set => SetPropertyValue("processid", value); 
		}

		[AttributeLogicalName("salutation")]
		public virtual string Salutation
		{
			get => GetPropertyValue<string>("salutation"); 
			set => SetPropertyValue("salutation", value); 
		}

		[AttributeLogicalName("shippingmethodcode")]
		public virtual eShippingMethodCode? ShippingMethodCode
		{
			get => (eShippingMethodCode?)GetPropertyValue<OptionSetValue>("shippingmethodcode")?.Value;
			set => SetPropertyValue("shippingmethodcode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("shippingmethodcodename")]
		public virtual string ShippingMethodCodeName
		{
			get => GetPropertyValue<string>("shippingmethodcodename"); 
		}

		[AttributeLogicalName("slaid")]
		public virtual EntityReference SLAId
		{
			get => GetPropertyValue<EntityReference>("slaid"); 
			set => SetPropertyValue("slaid", value); 
		}

		[AttributeLogicalName("slainvokedid")]
		public virtual EntityReference SLAInvokedId
		{
			get => GetPropertyValue<EntityReference>("slainvokedid"); 
		}

		[AttributeLogicalName("slainvokedidname")]
		public virtual string SLAInvokedIdName
		{
			get => GetPropertyValue<string>("slainvokedidname"); 
		}

		[AttributeLogicalName("slaname")]
		public virtual string SLAName
		{
			get => GetPropertyValue<string>("slaname"); 
		}

		[AttributeLogicalName("spousesname")]
		public virtual string SpousesName
		{
			get => GetPropertyValue<string>("spousesname"); 
			set => SetPropertyValue("spousesname", value); 
		}

		[AttributeLogicalName("stageid")]
		public virtual Guid StageId
		{
			get => GetPropertyValue<Guid>("stageid"); 
			set => SetPropertyValue("stageid", value); 
		}

		[AttributeLogicalName("statecode")]
		public virtual eStateCode? StateCode
		{
			get => (eStateCode?)GetPropertyValue<OptionSetValue>("statecode")?.Value;
			set => SetPropertyValue("statecode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("statecodename")]
		public virtual string StateCodeName
		{
			get => GetPropertyValue<string>("statecodename"); 
		}

		[AttributeLogicalName("statuscode")]
		public virtual eStatusCode? StatusCode
		{
			get => (eStatusCode?)GetPropertyValue<OptionSetValue>("statuscode")?.Value;
			set => SetPropertyValue("statuscode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("statuscodename")]
		public virtual string StatusCodeName
		{
			get => GetPropertyValue<string>("statuscodename"); 
		}

		[AttributeLogicalName("subscriptionid")]
		public virtual Guid SubscriptionId
		{
			get => GetPropertyValue<Guid>("subscriptionid"); 
			set => SetPropertyValue("subscriptionid", value); 
		}

		[AttributeLogicalName("suffix")]
		public virtual string Suffix
		{
			get => GetPropertyValue<string>("suffix"); 
			set => SetPropertyValue("suffix", value); 
		}

		[AttributeLogicalName("telephone1")]
		public virtual string Telephone1
		{
			get => GetPropertyValue<string>("telephone1"); 
			set => SetPropertyValue("telephone1", value); 
		}

		[AttributeLogicalName("telephone2")]
		public virtual string Telephone2
		{
			get => GetPropertyValue<string>("telephone2"); 
			set => SetPropertyValue("telephone2", value); 
		}

		[AttributeLogicalName("telephone3")]
		public virtual string Telephone3
		{
			get => GetPropertyValue<string>("telephone3"); 
			set => SetPropertyValue("telephone3", value); 
		}

		[AttributeLogicalName("territorycode")]
		public virtual eTerritoryCode? TerritoryCode
		{
			get => (eTerritoryCode?)GetPropertyValue<OptionSetValue>("territorycode")?.Value;
			set => SetPropertyValue("territorycode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("territorycodename")]
		public virtual string TerritoryCodeName
		{
			get => GetPropertyValue<string>("territorycodename"); 
		}

		[AttributeLogicalName("timespentbymeonemailandmeetings")]
		public virtual string TimeSpentByMeOnEmailAndMeetings
		{
			get => GetPropertyValue<string>("timespentbymeonemailandmeetings"); 
		}

		[AttributeLogicalName("timezoneruleversionnumber")]
		public virtual int? TimeZoneRuleVersionNumber
		{
			get => GetPropertyValue<int?>("timezoneruleversionnumber"); 
			set => SetPropertyValue("timezoneruleversionnumber", value); 
		}

		[AttributeLogicalName("transactioncurrencyid")]
		public virtual EntityReference TransactionCurrencyId
		{
			get => GetPropertyValue<EntityReference>("transactioncurrencyid"); 
			set => SetPropertyValue("transactioncurrencyid", value); 
		}

		[AttributeLogicalName("transactioncurrencyidname")]
		public virtual string TransactionCurrencyIdName
		{
			get => GetPropertyValue<string>("transactioncurrencyidname"); 
		}

		[AttributeLogicalName("traversedpath")]
		public virtual string TraversedPath
		{
			get => GetPropertyValue<string>("traversedpath"); 
			set => SetPropertyValue("traversedpath", value); 
		}

		[AttributeLogicalName("utcconversiontimezonecode")]
		public virtual int? UTCConversionTimeZoneCode
		{
			get => GetPropertyValue<int?>("utcconversiontimezonecode"); 
			set => SetPropertyValue("utcconversiontimezonecode", value); 
		}

		[AttributeLogicalName("versionnumber")]
		public virtual int? VersionNumber
		{
			get => GetPropertyValue<int?>("versionnumber"); 
		}

		[AttributeLogicalName("websiteurl")]
		public virtual string WebSiteUrl
		{
			get => GetPropertyValue<string>("websiteurl"); 
			set => SetPropertyValue("websiteurl", value); 
		}

		[AttributeLogicalName("yomifirstname")]
		public virtual string YomiFirstName
		{
			get => GetPropertyValue<string>("yomifirstname"); 
			set => SetPropertyValue("yomifirstname", value); 
		}

		[AttributeLogicalName("yomifullname")]
		public virtual string YomiFullName
		{
			get => GetPropertyValue<string>("yomifullname"); 
		}

		[AttributeLogicalName("yomilastname")]
		public virtual string YomiLastName
		{
			get => GetPropertyValue<string>("yomilastname"); 
			set => SetPropertyValue("yomilastname", value); 
		}

		[AttributeLogicalName("yomimiddlename")]
		public virtual string YomiMiddleName
		{
			get => GetPropertyValue<string>("yomimiddlename"); 
			set => SetPropertyValue("yomimiddlename", value); 
		}

	

	
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>")]
	[AttributeLogicalName("owningbusinessunit")]
	[RelationshipSchemaName("business_unit_contacts")]
	public BusinessUnit business_unit_contacts
	{
		get { return this.GetRelatedEntity<BusinessUnit>("business_unit_contacts",null); }
	}


		[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>")]
	[AttributeLogicalName("parentcustomerid")]
	[RelationshipSchemaName("contact_customer_accounts")]
	public Account contact_customer_accounts
	{
		get { return this.GetRelatedEntity<Account>("contact_customer_accounts",null); }
	}


		[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>")]
	[AttributeLogicalName("parentcustomerid")]
	[RelationshipSchemaName("contact_customer_contacts")]
	public Contact contact_customer_contacts
	{
		get { return this.GetRelatedEntity<Contact>("contact_customer_contacts",null); }
	}


		[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>")]
	[AttributeLogicalName("masterid")]
	[RelationshipSchemaName("contact_master_contact")]
	public Contact contact_master_contact
	{
		get { return this.GetRelatedEntity<Contact>("contact_master_contact",null); }
	}


		[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>")]
	[AttributeLogicalName("owninguser")]
	[RelationshipSchemaName("contact_owning_user")]
	public SystemUser contact_owning_user
	{
		get { return this.GetRelatedEntity<SystemUser>("contact_owning_user",null); }
	}


		[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>")]
	[AttributeLogicalName("createdby")]
	[RelationshipSchemaName("lk_contactbase_createdby")]
	public SystemUser lk_contactbase_createdby
	{
		get { return this.GetRelatedEntity<SystemUser>("lk_contactbase_createdby",null); }
	}


		[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>")]
	[AttributeLogicalName("modifiedby")]
	[RelationshipSchemaName("lk_contactbase_modifiedby")]
	public SystemUser lk_contactbase_modifiedby
	{
		get { return this.GetRelatedEntity<SystemUser>("lk_contactbase_modifiedby",null); }
	}


		[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>")]
	[AttributeLogicalName("createdonbehalfby")]
	[RelationshipSchemaName("lk_contact_createdonbehalfby")]
	public SystemUser lk_contact_createdonbehalfby
	{
		get { return this.GetRelatedEntity<SystemUser>("lk_contact_createdonbehalfby",null); }
	}


	
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>")]
	[AttributeLogicalName("modifiedonbehalfby")]
	[RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
	public SystemUser lk_contact_modifiedonbehalfby
	{
		get { return this.GetRelatedEntity<SystemUser>("lk_contact_modifiedonbehalfby",null); }
	}


	
	
	
	
	
	
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>")]
	[AttributeLogicalName("preferredsystemuserid")]
	[RelationshipSchemaName("system_user_contacts")]
	public SystemUser system_user_contacts
	{
		get { return this.GetRelatedEntity<SystemUser>("system_user_contacts",null); }
	}


		[System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1707:Identifiers should not contain underscores", Justification = "<Pending>")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>")]
	[AttributeLogicalName("owningteam")]
	[RelationshipSchemaName("team_contacts")]
	public Team team_contacts
	{
		get { return this.GetRelatedEntity<Team>("team_contacts",null); }
	}


	    }
}
